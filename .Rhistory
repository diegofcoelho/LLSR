plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, main = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, xlbl = s)
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = FALSE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, xlbl = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = FALSE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55)
library(openxlsx)
DATA <- read.csv2("E:/dfcoelho/Downloads/NatC!lia/dados_atualizados.csv")
BND <- read.xlsx("E:/dfcoelho/Downloads/NatC!lia/binodais.xlsx", startRow = 1, colNames = FALSE, skipEmptyRows = FALSE)
if (!all(is.na(BND[1, ]))) { BND <- rbind(rep(c(NA),4), BND) }
DB <- AQSysDB("E:/dfcoelho/Downloads/NatC!lia/binodais.xlsx")
path <-"E:/dfcoelho/Downloads/NatC!lia/dados_atualizados.csv"
DATA <- read.csv2("E:/dfcoelho/Downloads/NatC!lia/dados_atualizados.csv")
path <-"E:/dfcoelho/Downloads/NatC!lia/dados_atualizados.csv"
DATA <- read.csv2("E:/dfcoelho/Downloads/Natália/dados_atualizados.csv")
BND <- read.xlsx("E:/dfcoelho/Downloads/Natália/binodais.xlsx", startRow = 1, colNames = FALSE, skipEmptyRows = FALSE)
if (!all(is.na(BND[1, ]))) { BND <- rbind(rep(c(NA),4), BND) }
DB <- AQSysDB("E:/dfcoelho/Downloads/Natália/binodais.xlsx")
BND
DATA <- DATA[1:12, 1:12]
names(DATA)[1] <- "Componente.1"
###########################################################
library(rootSolve)
library(dplyr)
library(LLSR)
library(ggplot2)
###########################################################
FUN <- function(X, PARS) {
ALPHA <- PARS$MT/PARS$MTOT
A <- PARS$P1 * exp(PARS$P2 * (X[2] ^ (0.5)) - PARS$P3 * (X[2] ^ 3)) - X[1]
B <- PARS$P1 * exp(PARS$P2 * (X[4] ^ (0.5)) - PARS$P3 * (X[4] ^ 3)) - X[3]
C <- (PARS$WMP / ALPHA) - ((1 - ALPHA) / ALPHA) * X[3] - X[1]
D <- (PARS$WMC / ALPHA) - ((1 - ALPHA) / ALPHA) * X[4] - X[2]
return(c(
A = A,
B = B,
C = C,
D = D
))
}
tieline_data <- c()
for (row in seq(1, nrow(DATA))) {
PARS <- list(
P1 = DATA$P1[row],
P2 = DATA$P2[row],
P3 = DATA$P3[row],
WMP = DATA$C1.Global[row] * 100,
WMC = DATA$C2.Global[row] * 100,
MT = DATA$Massa.Topo[row],
MTOT = DATA$Massa.Topo[row] + DATA$Massa.Fundo[row]
)
res <- multiroot(
FUN,
start = c(15, 1e-10, 15, 1e-10),
parms = PARS,
positive = TRUE,
ctol = 1e-10,
verbose = TRUE
)
tieline_data <- rbind(tieline_data, data.frame(
series = DATA[row, 1],
TL = row,
x = c(res$root[2], PARS$WMC, res$root[4]),
y = c(res$root[1], PARS$WMP, res$root[3])
))
#cat("\n\n")
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = TRUE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = TRUE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, main = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = TRUE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, xlbl = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
tieline_data <- c()
for (row in seq(1, nrow(DATA))) {
PARS <- list(
P1 = DATA$P1[row],
P2 = DATA$P2[row],
P3 = DATA$P3[row],
WMP = DATA$C1.Global[row] * 100,
WMC = DATA$C2.Global[row] * 100,
MT = DATA$Massa.Topo[row],
MTOT = DATA$Massa.Topo[row] + DATA$Massa.Fundo[row]
)
res <- multiroot(
FUN,
start = c(15, 1, 15, 1),
parms = PARS,
positive = TRUE,
ctol = 1e-10,
verbose = TRUE
)
tieline_data <- rbind(tieline_data, data.frame(
series = DATA[row, 1],
TL = row,
x = c(res$root[2], PARS$WMC, res$root[4]),
y = c(res$root[1], PARS$WMP, res$root[3])
))
#cat("\n\n")
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = TRUE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, xlbl = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
tieline_data <- c()
for (row in seq(1, nrow(DATA))) {
PARS <- list(
P1 = DATA$P1[row],
P2 = DATA$P2[row],
P3 = DATA$P3[row],
WMP = DATA$C1.Global[row] * 100,
WMC = DATA$C2.Global[row] * 100,
MT = DATA$Massa.Topo[row],
MTOT = DATA$Massa.Topo[row] + DATA$Massa.Fundo[row]
)
res <- multiroot(
FUN,
start = c(15, 5, 15, 5),
parms = PARS,
positive = TRUE,
ctol = 1e-10,
verbose = TRUE
)
tieline_data <- rbind(tieline_data, data.frame(
series = DATA[row, 1],
TL = row,
x = c(res$root[2], PARS$WMC, res$root[4]),
y = c(res$root[1], PARS$WMP, res$root[3])
))
#cat("\n\n")
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = TRUE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, xlbl = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
tieline_data <- c()
for (row in seq(1, nrow(DATA))) {
PARS <- list(
P1 = DATA$P1[row],
P2 = DATA$P2[row],
P3 = DATA$P3[row],
WMP = DATA$C1.Global[row] * 100,
WMC = DATA$C2.Global[row] * 100,
MT = DATA$Massa.Topo[row],
MTOT = DATA$Massa.Topo[row] + DATA$Massa.Fundo[row]
)
res <- multiroot(
FUN,
start = c(15, .5, 15, .5),
parms = PARS,
positive = TRUE,
ctol = 1e-10,
verbose = TRUE
)
tieline_data <- rbind(tieline_data, data.frame(
series = DATA[row, 1],
TL = row,
x = c(res$root[2], PARS$WMC, res$root[4]),
y = c(res$root[1], PARS$WMP, res$root[3])
))
#cat("\n\n")
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = TRUE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, xlbl = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
tieline_data <- c()
for (row in seq(1, nrow(DATA))) {
PARS <- list(
P1 = DATA$P1[row],
P2 = DATA$P2[row],
P3 = DATA$P3[row],
WMP = DATA$C1.Global[row] * 100,
WMC = DATA$C2.Global[row] * 100,
MT = DATA$Massa.Topo[row],
MTOT = DATA$Massa.Topo[row] + DATA$Massa.Fundo[row]
)
res <- multiroot(
FUN,
start = c(15, 1.5, 15, 1.5),
parms = PARS,
positive = TRUE,
ctol = 1e-10,
verbose = TRUE
)
tieline_data <- rbind(tieline_data, data.frame(
series = DATA[row, 1],
TL = row,
x = c(res$root[2], PARS$WMC, res$root[4]),
y = c(res$root[1], PARS$WMP, res$root[3])
))
#cat("\n\n")
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = TRUE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, xlbl = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
tieline_data <- c()
for (row in seq(1, nrow(DATA))) {
PARS <- list(
P1 = DATA$P1[row],
P2 = DATA$P2[row],
P3 = DATA$P3[row],
WMP = DATA$C1.Global[row] * 100,
WMC = DATA$C2.Global[row] * 100,
MT = DATA$Massa.Topo[row],
MTOT = DATA$Massa.Topo[row] + DATA$Massa.Fundo[row]
)
res <- multiroot(
FUN,
start = c(1, 1, 1, 1),
parms = PARS,
positive = TRUE,
ctol = 1e-10,
verbose = TRUE
)
tieline_data <- rbind(tieline_data, data.frame(
series = DATA[row, 1],
TL = row,
x = c(res$root[2], PARS$WMC, res$root[4]),
y = c(res$root[1], PARS$WMP, res$root[3])
))
#cat("\n\n")
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = TRUE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, xlbl = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
tieline_data <- c()
for (row in seq(1, nrow(DATA))) {
PARS <- list(
P1 = DATA$P1[row],
P2 = DATA$P2[row],
P3 = DATA$P3[row],
WMP = DATA$C1.Global[row] * 100,
WMC = DATA$C2.Global[row] * 100,
MT = DATA$Massa.Topo[row],
MTOT = DATA$Massa.Topo[row] + DATA$Massa.Fundo[row]
)
res <- multiroot(
FUN,
start = c(25, 1, 25, 1),
parms = PARS,
positive = TRUE,
ctol = 1e-10,
verbose = TRUE
)
tieline_data <- rbind(tieline_data, data.frame(
series = DATA[row, 1],
TL = row,
x = c(res$root[2], PARS$WMC, res$root[4]),
y = c(res$root[1], PARS$WMP, res$root[3])
))
#cat("\n\n")
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>% head(1L) %>% summarise(P1, P2, P3),
silent = TRUE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55, xlbl = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s), aes(x = x, y = y, group = TL),col = "blue"))
}
View(tieline_data)
View(PARS)
View(res)
View(BND)
dataset <- BND[6:54,1:2]
AQSys.LevArmRule(dataset)
AQSys.LevArmRule(dataset, Xm = .15, Ym = .15, Vt = 3.9, Vb = 5.2, WT = 3.3906, WB = 6.4113)
AQSys.LevArmRule(dataset, Xm = .15, Ym = .15, Vt = 3.9, Vb = 5.2, WT = 3.3906, WB = 6.4113, byW = FALSE)
AQSys.LevArmRule(dataset, Xm = .15, Ym = .15, Vt = 3.9, Vb = 5.2, dyt = 0.8694, dyb = 1.2329, byW = FALSE)
library(LLSR)
AQSys.LevArmRule(dataset, Xm = .15, Ym = .15, Vt = 3.9, Vb = 5.2, dyt = 0.8694, dyb = 1.2329, byW = FALSE)
AQSys.LevArmRule(dataset, Xm = 15, Ym = 15, Vt = 3.9, Vb = 5.2, dyt = 0.8694, dyb = 1.2329, byW = FALSE)
AQSys.LevArmRule(dataset, Xm = 15, Ym = 15, Vt = 3.9, Vb = 5.2, WT = 3.3906, WB = 6.4113)
library(LLSR)
AQSys.LevArmRule(dataset, Xm = 15, Ym = 15, Vt = 3.9, Vb = 5.2, WT = 3.3906, WB = 6.4113)
AQSys.LevArmRule(dataset, Xm = 17.5, Ym = 17.5, Vt = 4.2, Vb = 5.5, WT = 3.42410, WB = 6.4685)
AQSys.LevArmRule(dataset, Xm = 17.5, Ym = 17.5, Vt = 4.5, Vb = 5.5, WT = 3.42410, WB = 6.4685)
AQSys.LevArmRule(dataset, Xm = 17.5, Ym = 17.5, Vt = 4.5, Vb = 5.5, WT = 3.53, WB = 6.47)
AQSys.LevArmRule(dataset, Xm = 17.5, Ym = 17.5, Vt = 4.2, Vb = 5.5, WT = 3.53, WB = 6.47)
AQSys.LevArmRule(dataset, Xm = .175, Ym = .175, Vt = 4.2, Vb = 5.5, WT = 3.53, WB = 6.47)
dataset
AQSys.LevArmRule(dataset, Xm = 17.5, Ym = 17.5, Vt = 4.2, Vb = 5.5, WT = 3.42410, WB = 6.4685)
AQSysDOE(BND)
library(LLSR)
peg4kslt
AQSys(peg4kslt[, 1:2])
library(openxlsx)
library(rootSolve)
library(dplyr)
library(LLSR)
library(ggplot2)
BND <- read.xlsx("E:/Dropbox/Natália Melani/R/binodais.xlsx", startRow = 1, colNames = FALSE, skipEmptyRows = FALSE)
View(BND)
AQSys(BND[6:95, 3:4])
EvalData <-
AQSysEval(
BND,
tol = 1e-10,
silent = FALSE,
xmax = 40,
convrgnceLines = TRUE
)
BND <- read.xlsx("E:/Dropbox/Natália Melani/R/binodais.xlsx", startRow = 1, colNames = FALSE, skipEmptyRows = FALSE)
if (!all(is.na(BND[1, ]))) { BND <- rbind(rep(c(NA),4), BND) }
EvalData <-
AQSysEval(
BND,
tol = 1e-10,
silent = FALSE,
xmax = 40,
convrgnceLines = TRUE
)
options(digits = 15)
AQSys(BND[6:95, 3:4])
AQSys(BND[6:95, 1:2])
AQSys(BND[6:95, 5:6])
EvalData <-
AQSysEval(
BND,
tol = 1e-10,
silent = FALSE,
xmax = 40,
convrgnceLines = TRUE
)
###########################################################
path <- "E:/Dropbox/Natália Melani/R/dados_atualizados.csv"
DATA <- read.csv2("E:/dfcoelho/Downloads/Natália/dados_atualizados.csv")
DATA <- read.csv2(path)
DATA <- DATA[1:12, 1:12]
names(DATA)[1] <- "Componente.1"
###########################################################
FUN <- function(X, PARS) {
ALPHA <- PARS$MT/PARS$MTOT
A <- PARS$P1 * exp(PARS$P2 * (X[2] ^ (0.5)) - PARS$P3 * (X[2] ^ 3)) - X[1]
B <- PARS$P1 * exp(PARS$P2 * (X[4] ^ (0.5)) - PARS$P3 * (X[4] ^ 3)) - X[3]
C <- (PARS$WMP / ALPHA) - ((1 - ALPHA) / ALPHA) * X[3] - X[1]
D <- (PARS$WMC / ALPHA) - ((1 - ALPHA) / ALPHA) * X[4] - X[2]
return(c(
A = A,
B = B,
C = C,
D = D
))
}
tieline_data <- c()
for (row in seq(1, nrow(DATA))) {
PARS <- list(
P1 = DATA$P1[row],
P2 = DATA$P2[row],
P3 = DATA$P3[row],
WMP = DATA$C1.Global[row] * 100,
WMC = DATA$C2.Global[row] * 100,
MT = DATA$Massa.Topo[row],
MTOT = DATA$Massa.Topo[row] + DATA$Massa.Fundo[row]
)
res <- multiroot(
FUN,
start = c(25, 1, 25, 1),
parms = PARS,
positive = TRUE,
ctol = 1e-10,
verbose = TRUE
)
tieline_data <- rbind(tieline_data, data.frame(
series = DATA[row, 1],
TL = row,
x = c(res$root[2], PARS$WMC, res$root[4]),
y = c(res$root[1], PARS$WMP, res$root[3])
))
#cat("\n\n")
}
systems <- DATA[, 1] %>% unique
db_data <- list()
for (s in systems) {
data <- AQSysCurve( "merchuk", DATA %>% filter(Componente.1 == s) %>%
head(1L) %>% summarise(P1, P2, P3), silent = TRUE)
data_xy <- data$data
db_data[[s]] <- data
plot_img <- AQSys.plot(data_xy, Order = "xy", silent = TRUE, xmax = 55,
xlbl = s)
print(plot_img + geom_line(data = tieline_data %>% filter(series == s),
aes(x = x, y = y, group = TL),col = "blue"))
}
AQSys(BND[6:95, 5:6])
BND <- read.xlsx("E:/Dropbox/Natália Melani/R/binodais.xlsx", startRow = 1, colNames = FALSE, skipEmptyRows = FALSE)
View(BND)
AQSys(BND[10:95, 5:6])
AQSys.plot(BND[10:95, 5:6])
###########################################################
path <- "E:/Dropbox/Natália Melani/R/dados_atualizados.csv"
DATA <- read.csv2(path)
BND <- read.xlsx("E:/Dropbox/Natália Melani/R/binodais.xlsx", startRow = 1, colNames = FALSE, skipEmptyRows = FALSE)
EvalData <-
AQSysEval(
BND,
tol = 1e-3,
silent = FALSE,
xmax = 40,
convrgnceLines = TRUE
)
BND <- read.xlsx("E:/Dropbox/Natália Melani/R/binodais.xlsx", startRow = 1, colNames = FALSE, skipEmptyRows = FALSE)
if (!all(is.na(BND[1, ]))) { BND <- rbind(rep(c(NA),4), BND) }
EvalData <-
AQSysEval(
BND,
tol = 1e-3,
silent = FALSE,
xmax = 40,
convrgnceLines = TRUE
)
EvalData <-
AQSysEval(
BND[,5:6],
tol = 1e-3,
silent = FALSE,
xmax = 40,
convrgnceLines = TRUE
)
EvalData <-
AQSysEval(
BND[,5:6],
tol = 1e-3,
silent = FALSE,
xmax = 30,
convrgnceLines = TRUE
)
EvalData <-
AQSysEval(
BND[,5:6],
tol = 1e-3,
silent = FALSE,
xmax = 35,
convrgnceLines = TRUE
)
